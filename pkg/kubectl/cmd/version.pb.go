// Code generated by protoc-gen-go.
// source: version.proto
// DO NOT EDIT!

/*
Package cmd is a generated protocol buffer package.

It is generated from these files:
	version.proto

It has these top-level messages:
	FlagDetail
	VersionFlags
*/
package cmd

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FlagDetail struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	Shorthand        *string `protobuf:"bytes,3,req,name=shorthand" json:"shorthand,omitempty"`
	Usage            *string `protobuf:"bytes,4,req,name=usage" json:"usage,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FlagDetail) Reset()                    { *m = FlagDetail{} }
func (m *FlagDetail) String() string            { return proto.CompactTextString(m) }
func (*FlagDetail) ProtoMessage()               {}
func (*FlagDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FlagDetail) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FlagDetail) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *FlagDetail) GetShorthand() string {
	if m != nil && m.Shorthand != nil {
		return *m.Shorthand
	}
	return ""
}

func (m *FlagDetail) GetUsage() string {
	if m != nil && m.Usage != nil {
		return *m.Usage
	}
	return ""
}

type VersionFlags struct {
	Client           *bool   `protobuf:"varint,2,opt,name=client" json:"client,omitempty"`
	Short            *bool   `protobuf:"varint,3,opt,name=short" json:"short,omitempty"`
	Output           *string `protobuf:"bytes,4,opt,name=output" json:"output,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VersionFlags) Reset()                    { *m = VersionFlags{} }
func (m *VersionFlags) String() string            { return proto.CompactTextString(m) }
func (*VersionFlags) ProtoMessage()               {}
func (*VersionFlags) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VersionFlags) GetClient() bool {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return false
}

func (m *VersionFlags) GetShort() bool {
	if m != nil && m.Short != nil {
		return *m.Short
	}
	return false
}

func (m *VersionFlags) GetOutput() string {
	if m != nil && m.Output != nil {
		return *m.Output
	}
	return ""
}

var E_Info = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*FlagDetail)(nil),
	Field:         1234,
	Name:          "cmd.info",
	Tag:           "bytes,1234,opt,name=info",
}

func init() {
	proto.RegisterType((*FlagDetail)(nil), "cmd.FlagDetail")
	proto.RegisterType((*VersionFlags)(nil), "cmd.VersionFlags")
	proto.RegisterExtension(E_Info)
}

func init() { proto.RegisterFile("version.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0xcd, 0x8a, 0xd4, 0x40,
	0x10, 0xc7, 0xcd, 0x7c, 0x2c, 0x4e, 0xab, 0x08, 0x8d, 0x87, 0x66, 0x50, 0x29, 0x72, 0x49, 0xd6,
	0x43, 0x2f, 0x28, 0x78, 0x10, 0x04, 0x99, 0x95, 0x3d, 0x39, 0xac, 0xe4, 0x20, 0x5e, 0x7b, 0x92,
	0x9a, 0x4c, 0x0f, 0x9d, 0xae, 0xd8, 0x1f, 0x03, 0xeb, 0x63, 0xcc, 0xa3, 0xf9, 0x38, 0x9e, 0x64,
	0x3b, 0x89, 0x73, 0x4b, 0xfd, 0x52, 0xbf, 0xaa, 0x6a, 0xfe, 0xec, 0xc5, 0x09, 0x9d, 0xd7, 0x64,
	0x65, 0xef, 0x28, 0x10, 0x9f, 0xd7, 0x5d, 0xb3, 0x86, 0x96, 0xa8, 0x35, 0x78, 0x93, 0xd0, 0x2e,
	0xee, 0x6f, 0x1a, 0xf4, 0xb5, 0xd3, 0x7d, 0x20, 0x37, 0xb4, 0xe5, 0x47, 0xc6, 0xee, 0x8c, 0x6a,
	0xbf, 0x62, 0x50, 0xda, 0x70, 0xce, 0x16, 0x56, 0x75, 0x28, 0x32, 0x98, 0x95, 0xab, 0x2a, 0x7d,
	0xf3, 0x57, 0x6c, 0x79, 0x52, 0x26, 0xa2, 0x98, 0x25, 0x38, 0x14, 0xfc, 0x35, 0x5b, 0xf9, 0x03,
	0xb9, 0x70, 0x50, 0xb6, 0x11, 0xf3, 0xf4, 0xe7, 0x02, 0x1e, 0x9d, 0xe8, 0x55, 0x8b, 0x62, 0x31,
	0x38, 0xa9, 0xc8, 0xff, 0x66, 0xec, 0xf9, 0x8f, 0xe1, 0xc8, 0xc7, 0x9d, 0x9e, 0xff, 0x64, 0x57,
	0xb5, 0xd1, 0x68, 0x83, 0x98, 0x41, 0x56, 0x3e, 0xdd, 0x7c, 0x39, 0x6f, 0x3f, 0x4f, 0x88, 0x2f,
	0xf7, 0xca, 0x78, 0x5c, 0x67, 0x75, 0x7e, 0x7d, 0x9b, 0x08, 0x8c, 0x0f, 0x04, 0xb2, 0xe6, 0x01,
	0x4a, 0x4b, 0xe0, 0xd1, 0x9d, 0xd0, 0x81, 0xc3, 0x5f, 0x51, 0x3b, 0x6c, 0xae, 0x65, 0x35, 0xc9,
	0xdf, 0xd8, 0x32, 0x5d, 0x23, 0xe6, 0x69, 0xf0, 0xc7, 0xf3, 0xf6, 0xc3, 0x48, 0xa6, 0xb9, 0xf3,
	0x9d, 0xfa, 0x9d, 0xbf, 0xfd, 0xee, 0xb4, 0x0d, 0x70, 0x8c, 0x3e, 0x40, 0x38, 0xe0, 0xff, 0x0d,
	0x36, 0x76, 0x3b, 0x74, 0xb2, 0x1a, 0x95, 0x0d, 0xbb, 0xa2, 0x18, 0xfa, 0x18, 0xc4, 0x02, 0xb2,
	0x72, 0xb5, 0x79, 0x77, 0xde, 0x16, 0x13, 0xe2, 0x4f, 0xd6, 0x19, 0xe5, 0xe2, 0xde, 0x22, 0xd0,
	0x1e, 0x8a, 0x07, 0xd5, 0x99, 0x02, 0xc8, 0x41, 0x71, 0xf4, 0x64, 0x0b, 0x59, 0x8d, 0x6d, 0x9f,
	0x6e, 0xd9, 0x42, 0xdb, 0x3d, 0xf1, 0x37, 0x72, 0xc8, 0x44, 0x4e, 0x99, 0xc8, 0x3b, 0x8d, 0xa6,
	0xb9, 0xef, 0x83, 0x26, 0xeb, 0xc5, 0x9f, 0x15, 0x64, 0xe5, 0xb3, 0xf7, 0x2f, 0x65, 0xdd, 0x35,
	0xf2, 0x92, 0x4c, 0x95, 0xe4, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x83, 0x06, 0xbb, 0xe4,
	0x01, 0x00, 0x00,
}
